package com.wavechat.component;

import com.wavechat.GlobalVariable;
import com.wavechat.bus.ChatMessageBUS;
import java.awt.event.KeyEvent;

public class ChatFooter extends javax.swing.JPanel {
    private String receiver;    
    private int groupID;
    private String mode;
    private ChatBody chatBody;
    
    public ChatFooter(ChatBody chatBody) {
        this.chatBody = chatBody;  
        initComponents();
    }
    
    public void setReceiver(String receiver) { this.receiver = receiver; }    
    public void setGroupID(int groupID) { this.groupID = groupID; }
    public void setMode(String mode) { this.mode = mode; }
    
    private void handleChat(String receiverID) {
        String messageText = inputTextArea.getText().trim();  // Lấy tin nhắn người dùng nhập vào
        if (messageText.isEmpty()) {
            return;  // Nếu tin nhắn rỗng thì không làm gì cả
        }

        String senderID = GlobalVariable.getUserID();  // Lấy ID của người gửi (user hiện tại)

        // Gọi phương thức để lưu tin nhắn vào cơ sở dữ liệu
        ChatMessageBUS messageBUS = new ChatMessageBUS();
        boolean success = messageBUS.addMessage(senderID, receiverID, messageText);

        if (success) {
            System.out.println("Message sent successfully!");
            inputTextArea.setText(""); // Xóa nội dung ô nhập sau khi gửi tin nhắn
            chatBody.addNew(messageText);
        } else {
            System.out.println("Failed to send message.");
        }
    }

    private void handleGroupChat(int groupID) {
        String messageText = inputTextArea.getText().trim();  // Lấy tin nhắn người dùng nhập vào
        if (messageText.isEmpty()) {
            return;  // Nếu tin nhắn rỗng thì không làm gì cả
        }

        String senderID = GlobalVariable.getUserID();  // Lấy ID của người gửi (user hiện tại)

        // Gọi phương thức gửi tin nhắn vào nhóm
        ChatMessageBUS messageBUS = new ChatMessageBUS();
        boolean success = messageBUS.addMessageGroup(senderID, groupID, messageText);
        
        if (success) {
            System.out.println("Group message sent successfully!");
            inputTextArea.setText(""); // Xóa nội dung ô nhập sau khi gửi tin nhắn
            chatBody.addNew(messageText);
        } else {
            System.out.println("Failed to send group message.");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        inputScrollPanel = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        sendButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(2147483647, 60));
        setMinimumSize(new java.awt.Dimension(500, 60));
        setPreferredSize(new java.awt.Dimension(500, 60));
        setLayout(new java.awt.GridBagLayout());

        inputScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        inputScrollPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        inputScrollPanel.setPreferredSize(new java.awt.Dimension(400, 40));

        inputTextArea.setColumns(20);
        inputTextArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inputTextArea.setLineWrap(true);
        inputTextArea.setRows(20);
        inputTextArea.setWrapStyleWord(true);
        inputTextArea.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 8, 0, 0));
        inputTextArea.setPreferredSize(new java.awt.Dimension(400, 40));
        inputTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTextAreaKeyPressed(evt);
            }
        });
        inputScrollPanel.setViewportView(inputTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 384;
        gridBagConstraints.ipady = 34;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 14, 0);
        add(inputScrollPanel, gridBagConstraints);

        sendButton.setBackground(new java.awt.Color(26, 41, 128));
        sendButton.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        sendButton.setForeground(new java.awt.Color(255, 255, 255));
        sendButton.setText("Send");
        sendButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        sendButton.setPreferredSize(new java.awt.Dimension(65, 40));
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 14, 17);
        add(sendButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        if (mode == "user") {
            handleChat(receiver);
        }
        else if (mode == "group") {
            handleGroupChat(groupID);
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void inputTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextAreaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (mode == "user") {
                handleChat(receiver);
            }
            else if (mode == "group") {
                handleGroupChat(groupID);
            }
        }
    }//GEN-LAST:event_inputTextAreaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane inputScrollPanel;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
