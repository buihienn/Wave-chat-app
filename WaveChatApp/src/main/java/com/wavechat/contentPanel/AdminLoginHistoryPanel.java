/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.wavechat.contentPanel;

import com.wavechat.bus.LoginHistoryBUS;
import com.wavechat.dao.LoginHistoryDAO;
import com.wavechat.dto.LoginHistoryDTO;
import com.wavechat.dto.UserDTO;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author buihi
 */
public class AdminLoginHistoryPanel extends javax.swing.JPanel {
    private DefaultTableModel tableModel;
    /**
     * Creates new form AdminLoginHistoryPanel
     */
    public AdminLoginHistoryPanel() {
        initComponents();
        
        tableModel = new DefaultTableModel(new Object[]{"User ID","Username", "Full Name", "Time log"}, 0);
        jTableLoginHistory.setModel(tableModel);
        
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tableModel);
        jTableLoginHistory.setRowSorter(sorter);
        
    }
    
    private boolean isWithinDateRange(LocalDateTime loginTime, Date dateFrom, Date dateTo) {
        LocalDate loginDate = loginTime.toLocalDate();
        LocalDate fromDate = new java.sql.Date(dateFrom.getTime()).toLocalDate();
        LocalDate toDate = new java.sql.Date(dateTo.getTime()).toLocalDate();

        return !loginDate.isBefore(fromDate) && !loginDate.isAfter(toDate);
    }
    
    public void updateTable(Date dateFrom, Date dateTo) {
        tableModel.setRowCount(0);
        LoginHistoryBUS loginHistoryBUS = new LoginHistoryBUS();
        List<LoginHistoryDTO> loginHistoryList = loginHistoryBUS.getAllLoginHistory();
        
        LoginHistoryDAO loginHistoryDAO = new LoginHistoryDAO();
        
        Collections.sort(loginHistoryList, new Comparator<LoginHistoryDTO>() {
            @Override
            public int compare(LoginHistoryDTO log1, LoginHistoryDTO log2) {
                // So sánh theo loginTime giảm dần
                return log2.getLoginTime().compareTo(log1.getLoginTime());
            }
        });
        
        if (dateFrom == null || dateTo == null){
            for (LoginHistoryDTO log : loginHistoryList) {
                String id = log.getUserID();
                String[] temp = loginHistoryDAO.getUserNameAndFullNameByUserID(id);
                String username = temp[0];
                String fullname = temp[1];
                tableModel.addRow(new Object[]{
                    id,
                    username,       
                    fullname,
                    log.getLoginTime()
                });
            }
        }
        
        else {
            for (LoginHistoryDTO log : loginHistoryList) {
                if (isWithinDateRange(log.getLoginTime(), dateFrom, dateTo)){
                    String id = log.getUserID();
                    String[] temp = loginHistoryDAO.getUserNameAndFullNameByUserID(id);
                    String username = temp[0];
                    String fullname = temp[1];
                    tableModel.addRow(new Object[]{
                        id,
                        username,       
                        fullname,
                        log.getLoginTime()
                    });
                }

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JPanel();
        loginHistoryText = new javax.swing.JLabel();
        date = new javax.swing.JPanel();
        fromText = new javax.swing.JLabel();
        toText = new javax.swing.JLabel();
        jDateChooserFrom = new com.toedter.calendar.JDateChooser();
        jDateChooserTo = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLoginHistory = new javax.swing.JTable();
        jButtonUpdateTable = new javax.swing.JButton();

        Title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        loginHistoryText.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        loginHistoryText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginHistoryText.setText("Login History");

        javax.swing.GroupLayout TitleLayout = new javax.swing.GroupLayout(Title);
        Title.setLayout(TitleLayout);
        TitleLayout.setHorizontalGroup(
            TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TitleLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(loginHistoryText)
                .addContainerGap(520, Short.MAX_VALUE))
        );
        TitleLayout.setVerticalGroup(
            TitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TitleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginHistoryText))
        );

        date.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        fromText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fromText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fromText.setText("FROM");

        toText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        toText.setText("TO");

        javax.swing.GroupLayout dateLayout = new javax.swing.GroupLayout(date);
        date.setLayout(dateLayout);
        dateLayout.setHorizontalGroup(
            dateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(fromText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(toText)
                .addGap(18, 18, 18)
                .addComponent(jDateChooserTo, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dateLayout.setVerticalGroup(
            dateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toText)
                    .addComponent(jDateChooserTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateChooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fromText)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jDateChooserFrom.getDateEditor().setEnabled(false);
        jDateChooserTo.getDateEditor().setEnabled(false);

        jScrollPane1.setViewportView(jTableLoginHistory);

        jButtonUpdateTable.setText("Update table");
        jButtonUpdateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(jButtonUpdateTable)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUpdateTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUpdateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateTableActionPerformed
        // TODO add your handling code here:
        Date dateFrom = jDateChooserFrom.getDate();
        Date dateTo = jDateChooserTo.getDate();
        
        updateTable(dateFrom, dateTo);
    }//GEN-LAST:event_jButtonUpdateTableActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Title;
    private javax.swing.JPanel date;
    private javax.swing.JLabel fromText;
    private javax.swing.JButton jButtonUpdateTable;
    private com.toedter.calendar.JDateChooser jDateChooserFrom;
    private com.toedter.calendar.JDateChooser jDateChooserTo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLoginHistory;
    private javax.swing.JLabel loginHistoryText;
    private javax.swing.JLabel toText;
    // End of variables declaration//GEN-END:variables
}
